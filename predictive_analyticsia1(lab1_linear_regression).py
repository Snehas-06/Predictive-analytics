# -*- coding: utf-8 -*-
"""Predictive_analyticsIA1(LAB1-Linear regression).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YWbh8WKt1taolpkc7GXPmy6p-o_PcXrV
"""

import pandas as pd
data = pd.read_csv('/content/drive/MyDrive/Predictive analytics Practice/expenses.csv')
print(data)

d1 = data.isnull().sum()
d2 = data.duplicated().sum()
#print(d1)
#print(d2)

Q1 = data.quantile(0.25)
Q3 = data.quantile(0.75)
IQR = Q3 - Q1
outliers = ((data < (Q1 - 1.5 * IQR)) | (data > (Q3 + 1.5 * IQR))).any(axis=1)

cleaned_df = data[~outliers]

cleaned_df.to_csv('cleaned_dataset.csv', index=False)

from sklearn.preprocessing import LabelEncoder
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

model1 = LabelEncoder()
model1.fit_transform(data['sex'])

x = data.drop(columns=['charges'])
y = data['charges']

X_train,X_test,Y_train,Y_test = train_test_split(x,y,test_size=.3,random_state=42)

model2 = LinearRegression()
model2.fit(X_train,Y_train)
result = model2.predict(X_test)
print(result)
accuracy = accuracy_score(Y_test,result)
print(accuracy)
meansquarederror = mean_squared_error(Y_test,result)
print(meansquarederror)
from sklearn.metrics import mean_squared_error, r2_score
import numpy as np

mse = mean_squared_error(y_test,y_pred)
rmse = np.sqrt(mse)
r2 = r2_score(y_test,y_pred)

print('MSE: ',mse)
print('RMSE: ',rmse)
print('R-Squared: ',r2)