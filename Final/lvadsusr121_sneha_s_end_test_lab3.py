# -*- coding: utf-8 -*-
"""LVADSUSR121_SNEHA_S_END_TEST_LAB3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kfaryTsCwIjuAv992y3sE2MHvb1vYo2B
"""

import pandas as pd
data = pd.read_csv('/content/drive/MyDrive/Predictive analytics Practice/seeds.csv')

data_bt.info()

data_bt.isnull().sum()

data_bt.bfill(inplace=True)

from matplotlib import pyplot as plt
data_bt.plot(kind='scatter', x='Length of kernel', y='Width of kernel',c='red', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)

import numpy as nm
import matplotlib.pyplot as mtp
import pandas as pd
from sklearn.cluster import KMeans
x = data_bt.values

wcss_list= []
for i in range(1, 11):
    kmeans = KMeans(n_clusters=i, init='k-means++', random_state= 42)
    kmeans.fit(x)
    wcss_list.append(kmeans.inertia_)

mtp.plot(range(1, 11), wcss_list)
mtp.title('The Elbow Methodh')
mtp.xlabel('Number of clusters(k)')
mtp.ylabel('wcss_list')
mtp.show()

kmeans = KMeans(n_clusters=3, init='k-means++', random_state= 42)
y_pred= kmeans.fit_predict(x)

mtp.scatter(x[y_pred == 0, 0], x[y_pred == 0, 1], s = 100, c = 'yellow', label = 'Cluster 1') #for first cluster
mtp.scatter(x[y_pred == 1, 0], x[y_pred == 1, 1], s = 100, c = 'green', label = 'Cluster 2') #for second cluster
mtp.scatter(x[y_pred== 2, 0], x[y_pred == 2, 1], s = 100, c = 'blue', label = 'Cluster 3') #for third cluster
mtp.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 300, c = 'red', label = 'Centroid')
mtp.title('Clusters of seeds')
mtp.xlabel('Width of kernel')
mtp.ylabel('Length of kernel')
mtp.legend()
mtp.show()

#The optimal number of k is 3